import org.jetbrains.kotlin.gradle.dsl.JvmTarget

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.buildConfig = [
        minSdk    : 15,
        compileSdk: 33,
        targetSdk : 30
    ]

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath libs.agp
    }
}

plugins {
    alias libs.plugins.kotlin
    alias libs.plugins.detekt
    alias libs.plugins.dokka
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

subprojects {
    apply plugin: "maven-publish"
    apply plugin: "signing"
    apply plugin: "io.gitlab.arturbosch.detekt"

    group = "com.gyurigrell.rxreactor"
    def isRelease = Boolean.valueOf(project.hasProperty("release") ? project.property("release") as String : "false")
    version = project.property("VERSION") + (isRelease ? "" : "-SNAPSHOT")

    detekt {
        config = files("${rootProject.projectDir}/config/detekt/detekt.yml")
        baseline = file("${rootProject.projectDir}/config/detekt/detekt-baseline.xml")
        buildUponDefaultConfig = true
    }

    dependencies {
        detektPlugins libs.detekt.formatting
    }

    tasks.named("detekt").configure {
        reports {
            xml.required.set(true)
            xml.outputLocation.set(file("build/reports/detekt/detekt.xml"))

            html.required.set(true)
            html.outputLocation.set(file("build/reports/detekt/detekt.html"))

            sarif.required.set(false)
            txt.required.set(false)
        }
    }

    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                kotlinOptions {
                    jvmTarget = JavaVersion.VERSION_1_8
                }
            }
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).tap {
        configureEach {
            compilerOptions {
                jvmTarget.set(JvmTarget.JVM_1_8)
            }
        }
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/ggrell/RxReactor")
                credentials {
                    username = project.findProperty("gpr.username")
                    password = project.findProperty("gpr.key")
                }
            }
            maven {
                name = "MavenCentralSnapshots"
                url = uri("https://oss.sonatype.org/content/repositories/snapshots")
                credentials {
                    username = project.findProperty("ossrh.username")
                    password = project.findProperty("ossrh.password")
                }
            }
            maven {
                name = "MavenCentralReleases"
                url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
                credentials {
                    username = project.findProperty("ossrh.username")
                    password = project.findProperty("ossrh.password")
                }
            }
        }
    }
}

