name: Pull Request Build

on: pull_request

jobs:
  unit-test:
    name: Build and run checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 17
        cache: 'gradle'
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6'
        bundler-cache: true
#    - name: Cache Gradle
#      if: always()
#      uses: actions/cache@v1.2.0
#      with:
#        path: |
#          ~/.gradle/caches/
#          ~/.gradle/wrapper/
#        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#        restore-keys: |
#          ${{ runner.os }}-gradle-
#    - name: Cache gems
#      if: always()
#      uses: actions/cache@v1.2.0
#      with:
#        path: vendor/bundle
#        key: ${{ runner.os }}-gems-${{ hashFiles('.github/Gemfile') }}
#        restore-keys: |
#          ${{ runner.os }}-gems-
    - name: Gradle - build, test, coverage
      run: |
        echo "::add-matcher::.github/gradle-java-matcher.json"
        echo "::add-matcher::.github/kotlin-error-matcher.json"
        echo "::add-matcher::.github/kotlin-warning-matcher.json"
        ./gradlew check jacocoTestReport --no-daemon -Dorg.gradle.daemon=false
    - name: Run Danger
      if: always()
      uses: MeilCli/danger-action@v5
      with:
        plugins_file: '.github/Gemfile'
        install_path: 'vendor/bundle'
        danger_file: '.github/Dangerfile'
        danger_id: 'danger-pr'
      env:
        DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_TOKEN }}
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: '**/build/reports/tests/'
    - name: Trigger Codecov
      run: bash <(curl -s https://codecov.io/bash)
