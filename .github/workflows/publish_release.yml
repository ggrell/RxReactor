name: Publish a release

on:
  release:
    types: [released]

jobs:
  build:
    name: Build, run checks, release to Maven Central
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: 'gradle'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
#      - name: Cache Gradle
#        if: always()
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
      - name: Assemble release
        run: |
          echo "::add-matcher::.github/gradle-java-matcher.json"
          echo "::add-matcher::.github/kotlin-error-matcher.json"
          echo "::add-matcher::.github/kotlin-warning-matcher.json"
          ./gradlew assembleRelease -Prelease=true
      - name: Run all checks and create coverage report
        run: |
          ./gradlew check jacocoTestReport -Prelease=true
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Publish to Maven Central Releases repo
        env:
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.MAVEN_CENTRAL_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_CENTRAL_KEY }}
        run: |
          ./gradlew publishAllPublicationsToMavenCentralReleasesRepository -Prelease=true -Possrh.username=${{ secrets.OSSRH_USERNAME }} -Possrh.password="${{ secrets.OSSRH_PASSWORD }}"
      - name: Add artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/rxreactor*.?ar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
